--- app.py
+++ app.py
@@ -91,6 +91,82 @@
     except Exception:
         cancer_list = ["선택 안함","ALL","AML","Lymphoma","Breast","Lung","Colon","Stomach","Liver","Other"]
     st.session_state["cancer_type"] = st.selectbox("암 종류", cancer_list, index=0, key=wkey("cancer_type"))
+    st.markdown("----")
+    st.subheader("🧬 진단 및 항암제")
+    # onco_map 기반 값 목록(영문 값 유지) + 한국어 병기 표시
+    try:
+        from onco_map import CANCER_TYPES  # type: ignore
+        _vals = list(CANCER_TYPES.keys()) if isinstance(CANCER_TYPES, dict) else list(CANCER_TYPES)
+    except Exception:
+        _vals = ["Acute Lymphoblastic Leukemia (ALL)",
+                 "Acute Promyelocytic Leukemia (APL)",
+                 "Ewing Sarcoma",
+                 "Chronic Myeloid Leukemia (CML)",
+                 "Diffuse Large B-Cell Lymphoma (DLBCL)",
+                 "Hodgkin Lymphoma",
+                 "Breast Cancer",
+                 "Non-Small Cell Lung Cancer (NSCLC)",
+                 "Small Cell Lung Cancer (SCLC)",
+                 "Colon Cancer",
+                 "Gastric Cancer",
+                 "Hepatocellular Carcinoma",
+                 "Pancreatic Cancer",
+                 "Ovarian Cancer",
+                 "Cervical Cancer",
+                 "Prostate Cancer",
+                 "Glioblastoma",
+                 "Other"]
+    KO = {
+        "Acute Lymphoblastic Leukemia": "급성 림프모구 백혈병",
+        "Acute Promyelocytic Leukemia": "급성 전골수구성 백혈병",
+        "Ewing Sarcoma": "유잉육종",
+        "Chronic Myeloid Leukemia": "만성 골수성 백혈병",
+        "Diffuse Large B-Cell Lymphoma": "거대 B세포 림프종",
+        "Hodgkin Lymphoma": "호지킨 림프종",
+        "Breast Cancer": "유방암",
+        "Non-Small Cell Lung Cancer": "비소세포 폐암",
+        "Small Cell Lung Cancer": "소세포 폐암",
+        "Colon Cancer": "대장암",
+        "Gastric Cancer": "위암",
+        "Hepatocellular Carcinoma": "간세포암",
+        "Pancreatic Cancer": "췌장암",
+        "Ovarian Cancer": "난소암",
+        "Cervical Cancer": "자궁경부암",
+        "Prostate Cancer": "전립선암",
+        "Glioblastoma": "교모세포종",
+        "Other": "기타",
+    }
+    def _fmt_dx(name: str) -> str:
+        if name == "선택":
+            return "선택"
+        base = name
+        abbr = None
+        if "(" in name and name.endswith(")"):
+            base = name[:name.rfind("(")].strip()
+            abbr = name[name.rfind("(")+1:-1].strip()
+        base_clean = base
+        ko = KO.get(base_clean) or KO.get(name)
+        label = base_clean + (f" ({abbr})" if abbr else "")
+        if ko:
+            label = f"{label} / {ko}"
+        return label
+    dx_values = ["선택"] + _vals
+    selected_cancer = st.selectbox("🧬 진단명을 선택하세요", dx_values, format_func=_fmt_dx, key=wkey("dx_select"))
+    chemo_map = {
+        "Acute Lymphoblastic Leukemia (ALL)": ["6-MP (메르캅토퓨린)", "MTX (메토트렉세이트)", "Ara-C (시타라빈)", "Vincristine (빈크리스틴)"],
+        "Acute Promyelocytic Leukemia (APL)": ["ATRA (베사노이드)", "ATO (아르세닉 트리옥사이드)", "MTX (메토트렉세이트)", "6-MP (메르캅토퓨린)"],
+        "Ewing Sarcoma": ["Vincristine (빈크리스틴)", "Doxorubicin (독소루비신)", "Cyclophosphamide (사이클로포스파마이드)", "Ifosfamide (이포스파마이드)", "Etoposide (에토포사이드)"],
+    }
+    if selected_cancer in chemo_map:
+        meds = st.multiselect("💊 사용 중인 항암제를 선택하세요", chemo_map[selected_cancer], key=wkey("chemo_ms"))
+    elif selected_cancer in ("선택","Other"):
+        st.text("진단명을 선택하시면 항암제가 자동 표시됩니다.")
+        meds = []
+    else:
+        st.info("이 진단에 대한 자동 추천 목록이 아직 등록되지 않았습니다. 직접 입력해주세요.")
+        meds = st.text_input("기타 항암제(쉼표로 구분)", key=wkey("chemo_other"))
+    st.session_state["chemo_meds"] = meds
+
     st.markdown("----")
     st.subheader("🧬 진단 및 항암제")
     # 진단 선택 + 자동 항암제 추천
